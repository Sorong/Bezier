#version 430

layout(triangles, equal_spacing, cw) in;

layout(location = 3) uniform mat4 mvp;
layout(location = 4) uniform mat3 nm;


out vec3 tePatchDistance;
out vec3 tePosition;

void main() {
	vec3 p0 = vec3(gl_TessCoord.x * gl_in[0].gl_Position);
	vec3 p1 = vec3(gl_TessCoord.y * gl_in[1].gl_Position);
	vec3 p2 = vec3(gl_TessCoord.z * gl_in[2].gl_Position);
	tePatchDistance = gl_TessCoord;
	tePosition = normalize(p0 + p1 + p2);
	gl_Position = mvp * vec4(tePosition, 1);
}